import{a as k}from"./chunk-OSCRORKM.js";import{c as b,d as p}from"./chunk-33KQFL5W.js";import{a as d,b as l}from"./chunk-PIVKBQQN.js";import{a as f}from"./chunk-WUSS4SHQ.js";import{R as o,X as i,a as h,b as v,sa as r,tc as m,uc as u}from"./chunk-QP7WRVZV.js";var n=class s{interlocutor=r(null);changeOnlineStatus(e,t){let c=this.interlocutor();c&&c.id===e&&this.interlocutor.set(v(h({},c),{isOnline:t}))}static \u0275fac=function(t){return new(t||s)};static \u0275prov=o({token:s,factory:s.\u0275fac,providedIn:"root"})};var a={INVALID_TOKEN:"Invalid token provided for socket",NO_TOKEN:"No token provided for socket",TOKEN_IS_EXPIRED:"Token is expired",RATE_LIMIT_EXCEEDED:"Rate limit exceeded"};var S=class s{interlocutorService=i(n);socket=i(k);authTokenService=i(p);chatStateService=i(b);messageService=i(l);authTokenStateService=i(f);token=m(()=>this.authTokenStateService.token());isChatsLoading=r(!1);constructor(){this.subscribeToEvents(),u(()=>{let e=this.token();e&&(this.disconnect(),this.connect(e))})}subscribeToEvents(){this.onUserChats().subscribe(e=>{this.chatStateService.updateChats(e),this.isChatsLoading.set(!1)}),this.onUserOnlineStatus().subscribe(e=>{this.chatStateService.updateUserOnlineStatus(e.userId,e.isOnline),this.interlocutorService.changeOnlineStatus(e.userId,e.isOnline)}),this.onError().subscribe(e=>{e.message===a.INVALID_TOKEN&&this.authTokenService.refreshToken().subscribe(t=>{this.connect(t)}),e.message===a.RATE_LIMIT_EXCEEDED&&(this.disconnect(),this.authTokenService.logout(),setTimeout(()=>{this.messageService.sendMessage(d.TOO_MANY_REQUESTS)},2e3))}),this.onDisconnect().subscribe(()=>{this.chatStateService.chats.set(null)})}isConnected(){return this.socket.ioSocket.connected}connect(e){this.isConnected()||(e&&(this.socket.ioSocket.auth={token:e}),this.socket.connect())}disconnect(){this.socket.disconnect()}sendMessage(e){this.socket.emit("sendMessage",e)}onReceiveMessage(){return this.socket.fromEvent("receiveMessage")}onUserOnlineStatus(){return this.socket.fromEvent("userOnlineStatus")}joinChat(e,t){return this.socket.emit("joinChat",{participant1Id:e,participant2Id:t}),this.socket.fromEvent("joinChatResponse")}leaveChat(e){this.socket.emit("leaveChat",{chatId:e})}markMessageAsRead(e){this.socket.emit("markMessageAsRead",{chatId:e})}sendTypingIndicator(e,t){this.socket.emit("typing",{chatId:e,isTyping:t})}onUserTyping(){return this.socket.fromEvent("userTyping")}onUserChats(){return this.socket.fromEvent("userChats")}getUserChats(){this.socket.emit("getUserChats")}onPreviousMessages(){return this.socket.fromEvent("previousMessages")}onConnect(){return this.socket.fromEvent("connect")}onDisconnect(){return this.socket.fromEvent("disconnect")}onError(){return this.socket.fromEvent("error")}static \u0275fac=function(t){return new(t||s)};static \u0275prov=o({token:s,factory:s.\u0275fac,providedIn:"root"})};export{n as a,S as b};
