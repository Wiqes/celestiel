import{a as d,b as h}from"./chunk-ESLZ4UM7.js";import{b as f}from"./chunk-B43JEXKL.js";import{a as r}from"./chunk-67XSK42V.js";import{R as o,X as n,ga as c,sa as m,tc as a}from"./chunk-QP7WRVZV.js";var u=class t extends d{isOtpRequested=m(!1);isPasswordConfirmationRequested=m(!1);request({email:e,password:s,otp:i}){this.makeAuthRequest("/auth/register",{username:e,password:s,otp:i},()=>this.onRegistrationSuccess(),()=>this.handleError(r.REGISTRATION_FAILED))}requestOTP(e){this.makeAuthRequest("/auth/request-otp",{username:e},()=>this.onOTPRequestSuccess(),()=>this.handleError(r.OTP_REQUEST_FAILED))}onRegistrationSuccess(){this.isOtpRequested.set(!1),this.handleSuccess(r.REGISTRATION_SUCCESS)}onOTPRequestSuccess(){this.handleSuccess(r.OTP_SENT,()=>{this.isOtpRequested.set(!0),this.isPasswordConfirmationRequested.set(!1)})}static \u0275fac=(()=>{let e;return function(i){return(e||(e=c(t)))(i||t)}})();static \u0275prov=o({token:t,factory:t.\u0275fac,providedIn:"root"})};var S=class t extends d{request({email:e}){this.makeAuthRequest("/auth/request-password-reset",{username:e},()=>this.handleSuccess(r.FORGOT_PASSWORD_INFO),()=>this.handleError(r.FORGOT_PASSWORD_ERROR))}static \u0275fac=(()=>{let e;return function(i){return(e||(e=c(t)))(i||t)}})();static \u0275prov=o({token:t,factory:t.\u0275fac,providedIn:"root"})};var R=class t{loginService=n(h);registrationService=n(u);passwordResetService=n(S);isLoadingLogin=a(()=>this.loginService.isLoading());isLoadingRegistration=a(()=>this.registrationService.isLoading());isOtpRequested=a(()=>this.registrationService.isOtpRequested());isPasswordConfirmationRequested=a(()=>this.registrationService.isPasswordConfirmationRequested());isResetPasswordRequested=a(()=>this.passwordResetService.isLoading());getStoredToken(){try{return window.localStorage.getItem("token")}catch{return null}}hasRole(e){return this.getStoredToken()?f(this.getStoredToken()||"").roles?.includes(e):!1}login(e,s){this.loginService.request({email:e,password:s})}register({email:e,password:s,otp:i}){this.registrationService.request({email:e,password:s,otp:i})}requestOTP(e){this.registrationService.requestOTP(e)}reset(){this.registrationService.isOtpRequested.set(!1),this.registrationService.isPasswordConfirmationRequested.set(!1)}requestPasswordConfirmation(){this.registrationService.isPasswordConfirmationRequested.set(!0)}sendPasswordResetRequest(e){this.passwordResetService.request({email:e})}static \u0275fac=function(s){return new(s||t)};static \u0275prov=o({token:t,factory:t.\u0275fac,providedIn:"root"})};export{R as a};
