import{a as d,b as p}from"./chunk-NG3FFVKC.js";import{b as h}from"./chunk-X7J2GG3T.js";import{a as r}from"./chunk-6PCLXYXS.js";import{a as f}from"./chunk-3Z5XDCTO.js";import{T as a,Z as n,ia as c,ua as m,xc as o}from"./chunk-RFBIJB72.js";var u=class t extends d{isOtpRequested=m(!1);isPasswordConfirmationRequested=m(!1);request({email:e,password:s,otp:i}){this.makeAuthRequest("/auth/register",{username:e,password:s,otp:i},()=>this.onRegistrationSuccess(),()=>this.handleError(r.REGISTRATION_FAILED))}requestOTP(e){this.makeAuthRequest("/auth/request-otp",{username:e},()=>this.onOTPRequestSuccess(),()=>this.handleError(r.OTP_REQUEST_FAILED))}onRegistrationSuccess(){this.isOtpRequested.set(!1),this.handleSuccess(r.REGISTRATION_SUCCESS)}onOTPRequestSuccess(){this.handleSuccess(r.OTP_SENT,()=>{this.isOtpRequested.set(!0),this.isPasswordConfirmationRequested.set(!1)})}static \u0275fac=(()=>{let e;return function(i){return(e||(e=c(t)))(i||t)}})();static \u0275prov=a({token:t,factory:t.\u0275fac,providedIn:"root"})};var S=class t extends d{request({email:e}){this.makeAuthRequest("/auth/request-password-reset",{username:e},()=>this.handleSuccess(r.FORGOT_PASSWORD_INFO),()=>this.handleError(r.FORGOT_PASSWORD_ERROR))}static \u0275fac=(()=>{let e;return function(i){return(e||(e=c(t)))(i||t)}})();static \u0275prov=a({token:t,factory:t.\u0275fac,providedIn:"root"})};var l=class t{loginService=n(p);authTokenStateService=n(f);registrationService=n(u);passwordResetService=n(S);isLoadingLogin=o(()=>this.loginService.isLoading());isLoadingRegistration=o(()=>this.registrationService.isLoading());isOtpRequested=o(()=>this.registrationService.isOtpRequested());isPasswordConfirmationRequested=o(()=>this.registrationService.isPasswordConfirmationRequested());isResetPasswordRequested=o(()=>this.passwordResetService.isLoading());token=o(()=>this.authTokenStateService.token());hasRole(e){return this.token()?h(this.token()||"").roles?.includes(e)??!1:!1}login(e,s){this.loginService.request({email:e,password:s})}register({email:e,password:s,otp:i}){this.registrationService.request({email:e,password:s,otp:i})}requestOTP(e){this.registrationService.requestOTP(e)}reset(){this.registrationService.isOtpRequested.set(!1),this.registrationService.isPasswordConfirmationRequested.set(!1)}requestPasswordConfirmation(){this.registrationService.isPasswordConfirmationRequested.set(!0)}sendPasswordResetRequest(e){this.passwordResetService.request({email:e})}static \u0275fac=function(s){return new(s||t)};static \u0275prov=a({token:t,factory:t.\u0275fac,providedIn:"root"})};export{l as a};
